
function getCompletedTransactions(user_id,cb)
{
	userModel.findOne({"_id":new ObjectId(user_id)},function(err,data) {
	if(err) throw err;
	POSTjson('/get-completed-transactions',{"publicKey":data.publicKey},function(err,result){
		cb(null,result);
	});
	});
}

getCompletedTransactions(req.user,function(err,result){
	if(err)
		console.log('Error while feteching completed transactions-',err);
	var completedTransactions = new Object();
	completedTransactions.data = result;
	completedTransactions.success = true;
	res.render('transactions',{transactionData:completedTransactions});
});

function getPendingTransactions(user_id,cb)
{
	userModel.findOne({"_id":new ObjectId(user_id)},function(err,data) {
	if(err) throw err;
	POSTjson('/get-pending-transactions',{"publicKey":data.publicKey},function(err,result){
		cb(null,result);
	});
	});
}

getPendingTransactions(req.user,function(err,result){
	if(err)
		console.log('Error while feteching completed transactions-',err);
	var pendingTransactions = new Object();
	pendingTransactions.data = result;
	pendingTransactions.success = true;
	res.render('transactions',{transactionData:pendingTransactions});
});


function makeTransaction(user_id,recipient,ammount,privateKey,cb)
{
	userModel.findOne({"_id":new ObjectId(user_id)},function(err,data){
	if(err) throw err;
	POSTjson('/launch-user-transaction',
	{"publicKey":data.publicKey,"privateKey":data.privateKey,"ammount":ammount,"recipient":recipient},function(err,result) {
		cb(null,result);
	});
	});
}

makeTransction(req.user,req.body.recipient,req.body.ammount,req.body.privateKey,function(err,result){
	if(err)
		console.log('Error while making transactions',err);
	var transaction = new Object();
	//transaction.data = result;
	// if(result !== null) then do
	transaction.Tid = result.tid;
	transaction.ammount = result.ammount;
	transaction.balance = result.balance;
	transaction.recipient = result.recipient;
	transaction.sender = result.sender;
	transaction.status = result.status;
	transaction.success = true;
	res.render('transaction',{transactionData:transaction});
});





